name: Build base images
on:
  push:
    branches:
      - 'feature/**'
      - 'improvement/**'
      - 'hotfix/**'
jobs:
#  nginx:
#    runs-on: ubuntu-latest
#    name: Publish nginx base
#    steps:
#      - uses: actions/checkout@master
#
#      - name: Run hadolint on Dockerfile
#        run: "docker run --rm -i hadolint/hadolint hadolint --ignore DL3008 --ignore DL3007 - < .docker/nginx/base/Dockerfile"
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v1.3.0
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.PACKAGE_TOKEN }}
#
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          file: .docker/nginx/base/Dockerfile
#          push: true
#          cache-from: ghcr.io/pierreribault/laravel-test-nginx:base
#          tags: ghcr.io/pierreribault/laravel-test-nginx:base

  create-env:
    name: Create environment ci file
    runs-on: ubuntu-latest
    steps:
      - run: |
          cat << EOF > .env.ci
            APP_NAME=Laravel
            APP_ENV=local
            APP_KEY=
            APP_DEBUG=true
            APP_URL=localhost:8080
            DUSK_URL=http://localhost:9515
            DB_CONNECTION=mysql
            DB_HOST=mysql-test
            DB_PORT=3306
            DB_DATABASE=laravel
            DB_USERNAME=root
            DB_PASSWORD=laravel
          EOF

      - run: |
          sudo chown 33:33 .env.ci

      - name: Create data file
        uses: actions/upload-artifact@v2
        with:
          name: environment-ci
          path: .env.ci

  composer:
    name: Composer install
    runs-on: ubuntu-latest
    needs: [php-fpm]
    container:
      image: composer:latest

    steps:
      - uses: actions/checkout@v2

      - name: Add nova repository
        run: |
          composer config http-basic.nova.laravel.com ${{ secrets.LARAVEL_NOVA_USER}} ${{ secrets.LARAVEL_NOVA_PASSWORD}} --working-dir ./application

      - name: Composer install
        run: |
          composer install --ignore-platform-reqs --no-progress --working-dir ./application

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

  npm:
    name: Npm run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14'

      - run: |
          npm --prefix ./application install ./application 

      - run: |
          npm run --prefix ./application production

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
