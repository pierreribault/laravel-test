name: Build base images
on:
  push:
    branches:
      - 'feature/**'
      - 'improvement/**'
      - 'hotfix/**'
jobs:
  php-fpm:
    runs-on: ubuntu-latest
    name: Publish php-fpm base
    steps:
      - uses: actions/checkout@master

      - name: Run hadolint on Dockerfile
        run: "docker run --rm -i hadolint/hadolint hadolint --ignore DL3008 --ignore DL3007 - < .docker/php-fpm/base/Dockerfile"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: .docker/php-fpm/base/Dockerfile
          push: true
          cache-from: ghcr.io/pierreribault/laravel-test-php-fpm:base
          tags: ghcr.io/pierreribault/laravel-test-php-fpm:base

  create-env:
    name: Create environment ci file
    runs-on: ubuntu-latest
    steps:
      - run: |
          cat << EOF > .env.ci
            APP_NAME=Laravel
            APP_ENV=local
            APP_KEY=
            APP_DEBUG=true
            APP_URL=localhost:8080
            DUSK_URL=http://localhost:9515
            DB_CONNECTION=mysql
            DB_HOST=mysql-test
            DB_PORT=3306
            DB_DATABASE=laravel
            DB_USERNAME=root
            DB_PASSWORD=laravel
          EOF

      - run: |
          sudo chown 33:33 .env.ci

      - name: Create data file
        uses: actions/upload-artifact@v2
        with:
          name: environment-ci
          path: .env.ci

  npm:
    name: Npm dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14'

      - name: Npm install
        working-directory: ./application
        run: |
          npm install

      - name: Npm install
        working-directory: ./application
        run: |
          npm run production

  phpunit:
    name: PHPunit tests
    runs-on: ubuntu-latest
    needs: [php-fpm, create-env]
    container:
      image: ghcr.io/pierreribault/laravel-test-php-fpm:base
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.PACKAGE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
          name: environment-ci
      
      - run: |
          ls -l
          mv .env.ci ./application/.env
      
      - name: Get Composer Cache Directory
        id: composer-cache
        working-directory: ./application
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Add nova repository
        working-directory: ./application
        run: |
          composer config http-basic.nova.laravel.com "${{ secrets.LARAVEL_NOVA_USER}}" "${{ secrets.LARAVEL_NOVA_PASSWORD}}"

      - name: Composer install
        working-directory: ./application
        run: |
          composer install --ignore-platform-reqs --no-progress

      - name: Artisan key generate
        working-directory: ./application
        run: |
          php artisan key:generate
          php artisan config:clear

      - name: PHPunit
        working-directory: ./application
        run: |
          php artisan test
